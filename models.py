import datetime

from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column


# Mapped: Это тип,
# который используется для указания типов данных для столбцов,
# в наших моделях SQLAlchemy.
# Он используется в аннотациях типов атрибутов классов моделей.(int/str)

# mapped_column: Это функция,
# которая создает объект столбца для определения столбца в таблице базы данных.
# Она принимает различные параметры, такие как тип данных столбца, его имя,
# индексы и ограничения.
# Этот объект столбца затем используется вместе с классами моделей SQLAlchemy,
# для отображения структуры таблицы базы данных в Python.
# В данном коде ниже: id, title, description, priority.

class Base(DeclarativeBase):
    __abstract__ = True
    # Базовый класс, который наследуется от DeclarativeBase.
    # DeclarativeBase служит базовым классом для всех классов моделей,
    # которые мы определяем для нашей базы данных.


class Task(Base):
    __tablename__ = 'task'

    # Этот блок определяет класс модели Task,
    # который наследуется от базового класса Base.
    # Атрибут __tablename__ указывает имя таблицы базы данных,
    # с которой будет связана эта модель.

    id: Mapped[int] = mapped_column(primary_key=True)
    title: Mapped[str] = mapped_column(index=True, unique=True)
    description: Mapped[str]
    priority: Mapped[int]

    # index=True (создает индекс для данного столбца).
    # unique=True (уникальность значений, если unique=True не может быть,
    # двух одинаковых значений.

    # Здесь определяются атрибуты модели Task.
    # Каждый атрибут представляет собой столбец в таблице базы данных.
    # Mapped[int], Mapped[str] используется,
    # для указания типа данных каждого столбца.

# id: Уникальный идентификатор задачи.
# Определен как тип (int),
# и установлен в качестве первичного ключа (primary_key=True),
# что означает,
# что его значения должны быть уникальными для каждой записи в таблице.


# title: Это название задачи.
# Он определен как (str).
# Установлены индекс и уникальность (index=True, unique=True),
# что обеспечивает быстрый доступ к данным и гарантирует,
# что названия задач будут уникальными.


# description: Это описание задачи.
# Определен как строковый тип (str).


# priority: Это приоритет задачи.
# Определен как целочисленный тип (int),
# который указывает на важность задачи.
